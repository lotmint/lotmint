# Default values for conode.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## Docker image settings
image:
  repository: dedis/conode
  tag: latest
  pullPolicy: Always

nameOverride: ""
fullnameOverride: ""

## Conode uses two consecutive TCP ports
## In this charts, the ports are exposed via a
## NodePort service
service:
  ports:
    tcp1: 7770
    tcp2: 7771
  nodePorts:
    tcp1: 32079
    tcp2: 32080

## The public config
publicToml: |
  [[servers]]
    Address = "tls://127.0.0.1:7770"
    Suite = "Ed25519"
    Public = "908c4bf012f3e896a36f4d9590873122f084233e62808ce13fca97cae7edbc63"
    Description = "Example node"

## The private config
privateToml: |
  # This file contains your private key.
  # Do not give it away lightly!
  Suite = "Ed25519"
  Public = "908c4bf012f3e896a36f4d9590873122f084233e62808ce13fca97cae7edbc63"
  Private = "b7641da23f8cd27176955847cb484abb16326e954749733bd93efbfaa2afc501"
  Address = "tls://:7770"
  ListenAddress = ""
  Description = "Example node"

## Persistence configuragtion
## Holds the block-chain data
persistence:
  enabled: true
  accessMode: ReadWriteOnce
  size: 30Gi

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
